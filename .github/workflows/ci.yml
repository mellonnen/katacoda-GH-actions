name: CI Pipeline

on: [pull_request, push, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # we can once again do a shallow clone
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache Yarn
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: yarn-cache
        with:
          path: |
            node_modules
            .yarn
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        if: steps.cache-yarn.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --cache-folder .yarn

  lint:
    name: Lint
    needs: install_dependencies # specify dependency relationship
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # we can once again do a shallow clone
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      # Get the cache saved by install_dependencies
      - uses: actions/cache@v3
        env:
          cache-name: yarn-cache
        with:
          path: |
            node_modules
            .yarn
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}


      - name: Lint
        run: yarn lint "./**/*.js"

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        env:
          cache-name: yarn-cache
        with:
          path: |
            node_modules
            .yarn
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}


      - name: Find reference commit on current branch
        if: github.event_name != 'pull_request'
        uses: nrwl/last-successful-commit-action@v1
        id: last_successful_commit
        with:
          branch: '${{ github.ref_name }}'
          workflow_id: 'ci.yml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup test flags
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]];
          then
            echo "TEST_FLAGS=--changedSince ${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
          elif [[ -n "${{ steps.last_successful_commit.outputs.commit_hash }}" ]];
          then
            echo "TEST_FLAGS=--changedSince ${{ steps.last_successful_commit.outputs.commit_hash }}" >> $GITHUB_ENV
          fi
